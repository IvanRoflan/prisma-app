generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id String @id @default(uuid()) @db.Uuid
  name String @db.VarChar()
  description String? @db.VarChar()
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  categories ProductCategory[]
  prices Price[]
  storeStocks StoreStock[]
  warehouseStocks WarehouseStock[]

  @@map("products")
}

model Category {
  id String @id @default(uuid()) @db.Uuid
  name String @db.VarChar()
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products ProductCategory[]

  @@map("categories")
}

model ProductCategory {
  productId String @db.Uuid
  categoryId String @db.Uuid

  product Product @relation(fields: [productId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])

  @@id([productId, categoryId])
  @@map("prodcut_categories")
}

model Store {
  id String @id @default(uuid()) @db.Uuid
  name String @db.VarChar()
  location String @db.VarChar()
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  prices Price[]
  storeStocks StoreStock[]

  @@map("stores")
}

model Price {
  id String @id @default(uuid()) @db.Uuid
  amount Decimal @db.Decimal(10, 2)
  currency String @db.VarChar()
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  storeId String @db.Uuid
  store Store @relation(fields: [storeId], references: [id])
  productId String @db.Uuid
  product Product @relation(fields: [productId], references: [id])

  @@unique([productId, storeId, currency])
  @@map("prices")
}

model StoreStock {
  id String @id @default(uuid()) @db.Uuid
  quantity Int
  storeId String @db.Uuid
  store Store @relation(fields: [storeId], references: [id])
  productId String @db.Uuid
  product Product @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([productId, storeId])
  @@map("store_stocks")
}

model WarehouseStock {
  id String @id @default(uuid()) @db.Uuid
  quantity Int
  productId String @db.Uuid
  product Product @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([productId])
  @@map("warehouse_stocks")
}
